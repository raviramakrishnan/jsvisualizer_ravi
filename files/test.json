{"classCompView":{"nodes" : [{"id":0, "x":100,"y":100,"width":145, "height":136, "txt":"CLASS: AnimatedGameObject()\n-------------------\n"},{"id":1, "x":100,"y":400,"width":145, "height":136, "txt":"AnimatedGameObject in LevelEndPost.js\n--------------------------\nat line 41: LevelEndPost.prototype = new AnimatedGameObject;\n-------------------------------\nAnimatedGameObject in Player.js\n--------------------------\nat line 253: Player.prototype = new AnimatedGameObject;\n-------------------------------\nAnimatedGameObject in Powerup.js\n--------------------------\nat line 78: Powerup.prototype = new AnimatedGameObject;"},{"id":2, "x":300,"y":100,"width":145, "height":136, "txt":"CLASS: ApplicationManager()\n-------------------\n"},{"id":3, "x":300,"y":400,"width":145, "height":136, "txt":"ApplicationManager in GameObjectManager.js\n--------------------------\nat line 144: new ApplicationManager().startupApplicationManager(this.canvas.width, this.canvas.height);"},{"id":4, "x":500,"y":100,"width":145, "height":136, "txt":"CLASS: GameObject()\n-------------------\n"},{"id":5, "x":500,"y":400,"width":145, "height":136, "txt":"GameObject in GameObjectManager.js\n--------------------------\nat line 210: Adds a new GameObject to the gameObjects collection\n-------------------------------\nGameObject in Main.js\n--------------------------\nat line 41: new GameObjectManager().startupGameObjectManager();\n-------------------------------\nGameObject in VisualGameObject.js\n--------------------------\nat line 59: VisualGameObject.prototype = new GameObject;"},{"id":6, "x":700,"y":100,"width":145, "height":136, "txt":"CLASS: GameObjectManager()\n-------------------\n"},{"id":7, "x":700,"y":400,"width":145, "height":136, "txt":"GameObjectManager in Main.js\n--------------------------\nat line 41: new GameObjectManager().startupGameObjectManager();"},{"id":8, "x":900,"y":100,"width":145, "height":136, "txt":"CLASS: Level()\n-------------------\n"},{"id":9, "x":900,"y":400,"width":145, "height":136, "txt":"Level in ApplicationManager.js\n--------------------------\nat line 32: this.level = new Level().startupLevel(this.canvasWidth, this.canvasHeight);\n-------------------------------\nLevel in Level.js\n--------------------------\nat line 75: new LevelEndPost().startupLevelEndPost(g_ResourceManager.portal, xPosition - g_ResourceManager.portal.width / 2 / 4, yPosition - g_ResourceManager.portal.height, 4);"},{"id":10, "x":1100,"y":100,"width":145, "height":136, "txt":"CLASS: LevelEndPost()\n-------------------\n"},{"id":11, "x":1100,"y":400,"width":145, "height":136, "txt":"LevelEndPost in Level.js\n--------------------------\nat line 75: new LevelEndPost().startupLevelEndPost(g_ResourceManager.portal, xPosition - g_ResourceManager.portal.width / 2 / 4, yPosition - g_ResourceManager.portal.height, 4);"},{"id":12, "x":1300,"y":100,"width":145, "height":136, "txt":"CLASS: MainMenu()\n-------------------\n"},{"id":13, "x":1300,"y":400,"width":145, "height":136, "txt":"MainMenu in ApplicationManager.js\n--------------------------\nat line 46: this.mainMenu = new MainMenu().startupMainMenu();"},{"id":14, "x":1500,"y":100,"width":145, "height":136, "txt":"CLASS: Player()\n-------------------\n"},{"id":15, "x":1500,"y":400,"width":145, "height":136, "txt":"Player in ApplicationManager.js\n--------------------------\nat line 36: g_player = new Player().startupPlayer(this.level);"},{"id":16, "x":1700,"y":100,"width":145, "height":136, "txt":"CLASS: Powerup()\n-------------------\n"},{"id":17, "x":1700,"y":400,"width":145, "height":136, "txt":"Powerup in Level.js\n--------------------------\nat line 72: new Powerup().startupPowerup(10, g_ResourceManager.gem, xPosition - g_ResourceManager.gem.width / 2, yPosition - g_ResourceManager.gem.height, 4, 1, 1);"},{"id":18, "x":1900,"y":100,"width":145, "height":136, "txt":"CLASS: Rectangle()\n-------------------\n"},{"id":19, "x":1900,"y":400,"width":145, "height":136, "txt":"Rectangle in AnimatedGameObject.js\n--------------------------\nat line 103: return new Rectangle().startupRectangle(this.x, this.y, this.frameWidth, this.image.height);\n-------------------------------\nRectangle in VisualGameObject.js\n--------------------------\nat line 56: return new Rectangle().startupRectangle(this.x, this.y, this.image.width, this.image.height);"},{"id":20, "x":2100,"y":100,"width":145, "height":136, "txt":"CLASS: RepeatingGameObject()\n-------------------\n"},{"id":21, "x":2100,"y":400,"width":145, "height":136, "txt":"RepeatingGameObject in ApplicationManager.js\n--------------------------\nat line 33: this.background3 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background2, 0, 100, 3, 600, 320, 0.75);\nat line 34: this.background2 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background1, 0, 100, 2, 600, 320, 0.5);\nat line 35: this.background = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background0, 0, 0, 1, 600, 320, 0.25);"},{"id":22, "x":2300,"y":100,"width":145, "height":136, "txt":"CLASS: ResourceManager()\n-------------------\n"},{"id":23, "x":2300,"y":400,"width":145, "height":136, "txt":"ResourceManager in GameObjectManager.js\n--------------------------\nat line 102: new ResourceManager().startupResourceManager("},{"id":24, "x":2500,"y":100,"width":145, "height":136, "txt":"CLASS: VisualGameObject()\n-------------------\n"},{"id":25, "x":2500,"y":400,"width":145, "height":136, "txt":"VisualGameObject in AnimatedGameObject.js\n--------------------------\nat line 107: AnimatedGameObject.prototype = new VisualGameObject;\n-------------------------------\nVisualGameObject in Level.js\n--------------------------\nat line 55: new VisualGameObject().startupVisualGameObject(g_ResourceManager.block, x * this.blockWidth, canvasHeight - (y + 1) * this.blockHeight, 4);\n-------------------------------\nVisualGameObject in MainMenu.js\n--------------------------\nat line 23: MainMenu.prototype = new VisualGameObject;\n-------------------------------\nVisualGameObject in RepeatingGameObject.js\n--------------------------\nat line 90: RepeatingGameObject.prototype = new VisualGameObject();"}],"connections" : [{"nodeA":0, "nodeB":1,"conA":"bottom","conB":"top"},{"nodeA":2, "nodeB":3,"conA":"bottom","conB":"top"},{"nodeA":4, "nodeB":5,"conA":"bottom","conB":"top"},{"nodeA":6, "nodeB":7,"conA":"bottom","conB":"top"},{"nodeA":8, "nodeB":9,"conA":"bottom","conB":"top"},{"nodeA":10, "nodeB":11,"conA":"bottom","conB":"top"},{"nodeA":12, "nodeB":13,"conA":"bottom","conB":"top"},{"nodeA":14, "nodeB":15,"conA":"bottom","conB":"top"},{"nodeA":16, "nodeB":17,"conA":"bottom","conB":"top"},{"nodeA":18, "nodeB":19,"conA":"bottom","conB":"top"},{"nodeA":20, "nodeB":21,"conA":"bottom","conB":"top"},{"nodeA":22, "nodeB":23,"conA":"bottom","conB":"top"},{"nodeA":24, "nodeB":25,"conA":"bottom","conB":"top"}]},"globalVarView":{"nodes" : [{"id":26, "x":20,"y":80,"width":260, "height":200, "txt":"Global Variable List:\n--------------------------------------------------------------\nvar FPS = 30\nvar SECONDS_BETWEEN_FRAMES = 1 / FPS\nvar g_GameObjectManager = null\nvar g_ApplicationManager = null\nvar g_ResourceManager = null\nvar g_score = 0\nvar g_player = null\nvar Abstract = { }\nvar $break = { }\nvar element = this.Element\nvar result = [l, t]\nvar div = new Element('div'), t = Element._insertionTranslations.tags[tagName]\nvar Methods = { }, ByTag = Element.Methods.ByTag\nvar F = Prototype.BrowserFeatures, T = Element.Methods.ByTag\nvar isButton\nvar cache = Event.cache\nvar timer\n"},{"id":27, "x":370,"y":100,"width":145, "height":40, "txt":" var FPS"},{"id":28, "x":370,"y":250,"width":145, "height":136, "txt":"var FPS in Main.js\n-----------------------------\nat line 4: var FPS = 30;\nat line 8: var SECONDS_BETWEEN_FRAMES = 1 / FPS;"},{"id":29, "x":570,"y":100,"width":145, "height":40, "txt":" var SECONDS_BETWEEN_FRAMES"},{"id":30, "x":570,"y":250,"width":145, "height":136, "txt":"var SECONDS_BETWEEN_FRAMES in GameObjectManager.js\n-----------------------------\nat line 116: setInterval(function(){g_GameObjectManager.draw();}, SECONDS_BETWEEN_FRAMES);\n-------------------------------\nvar SECONDS_BETWEEN_FRAMES in Main.js\n-----------------------------\nat line 8: var SECONDS_BETWEEN_FRAMES = 1 / FPS;"},{"id":31, "x":770,"y":100,"width":145, "height":40, "txt":" var g_GameObjectManager"},{"id":32, "x":770,"y":250,"width":145, "height":136, "txt":"var g_GameObjectManager in ApplicationManager.js\n-----------------------------\nat line 31: g_GameObjectManager.shutdownAll();\nat line 42: g_GameObjectManager.shutdownAll();\nat line 43: g_GameObjectManager.xScroll = 0;\nat line 44: g_GameObjectManager.yScroll = 0;\n-------------------------------\nvar g_GameObjectManager in GameObject.js\n-----------------------------\nat line 35: g_GameObjectManager.addGameObject(this);\nat line 44: g_GameObjectManager.removeGameObject(this);\n-------------------------------\nvar g_GameObjectManager in GameObjectManager.js\n-----------------------------\nat line 78: g_GameObjectManager = this;\nat line 81: document.onkeydown = function(event){g_GameObjectManager.keyDown(event);}\nat line 82: document.onkeyup = function(event){g_GameObjectManager.keyUp(event);}\nat line 116: setInterval(function(){g_GameObjectManager.draw();}, SECONDS_BETWEEN_FRAMES);\n-------------------------------\nvar g_GameObjectManager in Main.js\n-----------------------------\nat line 12: var g_GameObjectManager = null;\n-------------------------------\nvar g_GameObjectManager in Player.js\n-----------------------------\nat line 195: g_GameObjectManager.xScroll = this.x - (context.canvas.width - this.frameWidth -  this.screenBorder);\nat line 200: g_GameObjectManager.xScroll = this.x - this.screenBorder;"},{"id":33, "x":970,"y":100,"width":145, "height":40, "txt":" var g_ApplicationManager"},{"id":34, "x":970,"y":250,"width":145, "height":136, "txt":"var g_ApplicationManager in ApplicationManager.js\n-----------------------------\nat line 20: g_ApplicationManager = this;\n-------------------------------\nvar g_ApplicationManager in LevelEndPost.js\n-----------------------------\nat line 36: g_ApplicationManager.openMainMenu();\n-------------------------------\nvar g_ApplicationManager in Main.js\n-----------------------------\nat line 16: var g_ApplicationManager = null;\n-------------------------------\nvar g_ApplicationManager in MainMenu.js\n-----------------------------\nat line 20: g_ApplicationManager.startLevel();\n-------------------------------\nvar g_ApplicationManager in Powerup.js\n-----------------------------\nat line 73: g_ApplicationManager.updateScore();"},{"id":35, "x":1170,"y":100,"width":145, "height":40, "txt":" var g_ResourceManager"},{"id":36, "x":1170,"y":250,"width":145, "height":136, "txt":"var g_ResourceManager in ApplicationManager.js\n-----------------------------\nat line 33: this.background3 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background2, 0, 100, 3, 600, 320, 0.75);\nat line 34: this.background2 = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background1, 0, 100, 2, 600, 320, 0.5);\nat line 35: this.background = new RepeatingGameObject().startupRepeatingGameObject(g_ResourceManager.background0, 0, 0, 1, 600, 320, 0.25);\n-------------------------------\nvar g_ResourceManager in GameObjectManager.js\n-----------------------------\nat line 134: for (i = 0; i < g_ResourceManager.imageProperties.length; ++i)\nat line 136: if (g_ResourceManager[g_ResourceManager.imageProperties[i]].complete)\nat line 141: if ( numLoaded == g_ResourceManager.imageProperties.length )\n-------------------------------\nvar g_ResourceManager in Level.js\n-----------------------------\nat line 55: new VisualGameObject().startupVisualGameObject(g_ResourceManager.block, x * this.blockWidth, canvasHeight - (y + 1) * this.blockHeight, 4);\nat line 72: new Powerup().startupPowerup(10, g_ResourceManager.gem, xPosition - g_ResourceManager.gem.width / 2, yPosition - g_ResourceManager.gem.height, 4, 1, 1);\nat line 75: new LevelEndPost().startupLevelEndPost(g_ResourceManager.portal, xPosition - g_ResourceManager.portal.width / 2 / 4, yPosition - g_ResourceManager.portal.height, 4);\n-------------------------------\nvar g_ResourceManager in Main.js\n-----------------------------\nat line 20: var g_ResourceManager = null;\n-------------------------------\nvar g_ResourceManager in MainMenu.js\n-----------------------------\nat line 10: this.startupVisualGameObject(g_ResourceManager.mainmenu, 0, 0, 1);\n-------------------------------\nvar g_ResourceManager in Player.js\n-----------------------------\nat line 63: this.startupAnimatedGameObject(g_ResourceManager.idleLeft, 300, 400 - 48 - 48, 4, 6, 20);\nat line 109: this.setAnimation(g_ResourceManager.idleLeft, 6, 20);\nat line 115: this.setAnimation(g_ResourceManager.idleRight, 6, 20);\nat line 130: this.setAnimation(g_ResourceManager.idleLeft, 6, 20);\nat line 132: this.setAnimation(g_ResourceManager.runRight, 12, 20);\nat line 134: this.setAnimation(g_ResourceManager.runLeft, 12, 20);\n-------------------------------\nvar g_ResourceManager in ResourceManager.js\n-----------------------------\nat line 25: g_ResourceManager = this;"},{"id":37, "x":1370,"y":100,"width":145, "height":40, "txt":" var g_score"},{"id":38, "x":1370,"y":250,"width":145, "height":136, "txt":"var g_score in ApplicationManager.js\n-----------------------------\nat line 45: g_score = 0;\nat line 52: score.innerHTML = String(g_score);\n-------------------------------\nvar g_score in Main.js\n-----------------------------\nat line 24: var g_score = 0;\n-------------------------------\nvar g_score in Powerup.js\n-----------------------------\nat line 72: g_score += this.value;"},{"id":39, "x":1570,"y":100,"width":145, "height":40, "txt":" var g_player"},{"id":40, "x":1570,"y":250,"width":145, "height":136, "txt":"var g_player in ApplicationManager.js\n-----------------------------\nat line 36: g_player = new Player().startupPlayer(this.level);\n-------------------------------\nvar g_player in LevelEndPost.js\n-----------------------------\nat line 34: if (this.collisionArea().intersects(g_player.collisionArea()))\n-------------------------------\nvar g_player in Main.js\n-----------------------------\nat line 28: var g_player = null;\n-------------------------------\nvar g_player in Powerup.js\n-----------------------------\nat line 69: if (this.collisionArea().intersects(g_player.collisionArea()))"},{"id":41, "x":1770,"y":100,"width":145, "height":40, "txt":" var Abstract"},{"id":42, "x":1770,"y":250,"width":145, "height":136, "txt":"var Abstract in prototype-1.6.0.3.js\n-----------------------------\nat line 104: var Abstract = { };\nat line 3704: Abstract.TimedObserver = Class.create(PeriodicalExecuter, {\nat line 3721: Form.Element.Observer = Class.create(Abstract.TimedObserver, {\nat line 3727: Form.Observer = Class.create(Abstract.TimedObserver, {\nat line 3735: Abstract.EventObserver = Class.create({\nat line 3774: Form.Element.EventObserver = Class.create(Abstract.EventObserver, {\nat line 3780: Form.EventObserver = Class.create(Abstract.EventObserver, {"},{"id":43, "x":1970,"y":100,"width":145, "height":40, "txt":" var $break"},{"id":44, "x":2170,"y":100,"width":145, "height":40, "txt":" var element"},{"id":45, "x":2170,"y":250,"width":145, "height":136, "txt":"var element in AnimatedGameObject.js\n-----------------------------\nat line 71: Draws this element to the back buffer\n-------------------------------\nvar element in GameObject.js\n-----------------------------\nat line 2: The base class for all elements that appear in the game.\nat line 8: /** Display depth order. A smaller zOrder means the element is rendered first, and therefor\nat line 28: @param z        The z order of the element (elements in the background have a lower z value)\n-------------------------------\nvar element in GameObjectManager.js\n-----------------------------\nat line 32: /** A reference to the canvas element\nat line 36: /** A reference to the 2D context of the canvas element\nat line 48: /** True if the canvas element is supported, false otherwise\n-------------------------------\nvar element in prototype-1.6.0.3.js\n-----------------------------\nat line 1513: function $(element) {\nat line 1515: for (var i = 0, elements = [], length = arguments.length; i < length; i++)\nat line 1516: elements.push($(arguments[i]));\nat line 1517: return elements;\nat line 1519: if (Object.isString(element))\nat line 1520: element = document.getElementById(element);\nat line 1521: return Element.extend(element);\nat line 1558: var element = this.Element;\nat line 1571: Object.extend(this.Element, element || { });\nat line 1572: if (element) this.Element.prototype = element.prototype;\nat line 1578: visible: function(element) {\nat line 1579: return $(element).style.display != 'none';\nat line 1582: toggle: function(element) {\nat line 1583: element = $(element);\nat line 1584: Element[Element.visible(element) ? 'hide' : 'show'](element);\nat line 1585: return element;\nat line 1588: hide: function(element) {\nat line 1589: element = $(element);\nat line 1590: element.style.display = 'none';\nat line 1591: return element;\nat line 1594: show: function(element) {\nat line 1595: element = $(element);\nat line 1596: element.style.display = '';\nat line 1597: return element;\nat line 1600: remove: function(element) {\nat line 1601: element = $(element);\nat line 1602: element.parentNode.removeChild(element);\nat line 1603: return element;\nat line 1606: update: function(element, content) {\nat line 1607: element = $(element);\nat line 1609: if (Object.isElement(content)) return element.update().insert(content);\nat line 1611: element.innerHTML = content.stripScripts();\nat line 1613: return element;\nat line 1616: replace: function(element, content) {\nat line 1617: element = $(element);\nat line 1621: var range = element.ownerDocument.createRange();\nat line 1622: range.selectNode(element);\nat line 1626: element.parentNode.replaceChild(content, element);\nat line 1627: return element;\nat line 1630: insert: function(element, insertions) {\nat line 1631: element = $(element);\nat line 1646: insert(element, content);\nat line 1653: ? element.parentNode : element).tagName.toUpperCase();\nat line 1658: childNodes.each(insert.curry(element));\nat line 1663: return element;\nat line 1666: wrap: function(element, wrapper, attributes) {\nat line 1667: element = $(element);\nat line 1672: if (element.parentNode)\nat line 1673: element.parentNode.replaceChild(wrapper, element);\nat line 1674: wrapper.appendChild(element);\nat line 1678: inspect: function(element) {\nat line 1679: element = $(element);\nat line 1680: var result = '<' + element.tagName.toLowerCase();\nat line 1683: var value = (element[property] || '').toString();\nat line 1689: recursivelyCollect: function(element, property) {\nat line 1690: element = $(element);\nat line 1691: var elements = [];\nat line 1692: while (element = element[property])\nat line 1693: if (element.nodeType == 1)\nat line 1694: elements.push(Element.extend(element));\nat line 1695: return elements;\nat line 1698: ancestors: function(element) {\nat line 1699: return $(element).recursivelyCollect('parentNode');\nat line 1702: descendants: function(element) {\nat line 1703: return $(element).select(\"*\");\nat line 1706: firstDescendant: function(element) {\nat line 1707: element = $(element).firstChild;\nat line 1708: while (element && element.nodeType != 1) element = element.nextSibling;\nat line 1709: return $(element);\nat line 1712: immediateDescendants: function(element) {\nat line 1713: if (!(element = $(element).firstChild)) return [];\nat line 1714: while (element && element.nodeType != 1) element = element.nextSibling;\nat line 1715: if (element) return [element].concat($(element).nextSiblings());\nat line 1719: previousSiblings: function(element) {\nat line 1720: return $(element).recursivelyCollect('previousSibling');\nat line 1723: nextSiblings: function(element) {\nat line 1724: return $(element).recursivelyCollect('nextSibling');\nat line 1727: siblings: function(element) {\nat line 1728: element = $(element);\nat line 1729: return element.previousSiblings().reverse().concat(element.nextSiblings());\nat line 1732: match: function(element, selector) {\nat line 1735: return selector.match($(element));\nat line 1738: up: function(element, expression, index) {\nat line 1739: element = $(element);\nat line 1740: if (arguments.length == 1) return $(element.parentNode);\nat line 1741: var ancestors = element.ancestors();\nat line 1746: down: function(element, expression, index) {\nat line 1747: element = $(element);\nat line 1748: if (arguments.length == 1) return element.firstDescendant();\nat line 1749: return Object.isNumber(expression) ? element.descendants()[expression] :\nat line 1750: Element.select(element, expression)[index || 0];\nat line 1753: previous: function(element, expression, index) {\nat line 1754: element = $(element);\nat line 1755: if (arguments.length == 1) return $(Selector.handlers.previousElementSibling(element));\nat line 1756: var previousSiblings = element.previousSiblings();\nat line 1761: next: function(element, expression, index) {\nat line 1762: element = $(element);\nat line 1763: if (arguments.length == 1) return $(Selector.handlers.nextElementSibling(element));\nat line 1764: var nextSiblings = element.nextSiblings();\nat line 1770: var args = $A(arguments), element = $(args.shift());\nat line 1771: return Selector.findChildElements(element, args);\nat line 1775: var args = $A(arguments), element = $(args.shift());\nat line 1776: return Selector.findChildElements(element.parentNode, args).without(element);\nat line 1779: identify: function(element) {\nat line 1780: element = $(element);\nat line 1781: var id = element.readAttribute('id'), self = arguments.callee;\nat line 1783: do { id = 'anonymous_element_' + self.counter++ } while ($(id));\nat line 1784: element.writeAttribute('id', id);\nat line 1788: readAttribute: function(element, name) {\nat line 1789: element = $(element);\nat line 1792: if (t.values[name]) return t.values[name](element, name);\nat line 1795: return (!element.attributes || !element.attributes[name]) ? null :\nat line 1796: element.attributes[name].value;\nat line 1799: return element.getAttribute(name);\nat line 1802: writeAttribute: function(element, name, value) {\nat line 1803: element = $(element);\nat line 1812: if (t.values[attr]) name = t.values[attr](element, value);\nat line 1814: element.removeAttribute(name);\nat line 1816: element.setAttribute(name, name);\nat line 1817: else element.setAttribute(name, value);\nat line 1819: return element;\nat line 1822: getHeight: function(element) {\nat line 1823: return $(element).getDimensions().height;\nat line 1826: getWidth: function(element) {\nat line 1827: return $(element).getDimensions().width;\nat line 1830: classNames: function(element) {\nat line 1831: return new Element.ClassNames(element);\nat line 1834: hasClassName: function(element, className) {\nat line 1835: if (!(element = $(element))) return;\nat line 1836: var elementClassName = element.className;\nat line 1837: return (elementClassName.length > 0 && (elementClassName == className ||\nat line 1838: new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName)));\nat line 1841: addClassName: function(element, className) {\nat line 1842: if (!(element = $(element))) return;\nat line 1843: if (!element.hasClassName(className))\nat line 1844: element.className += (element.className ? ' ' : '') + className;\nat line 1845: return element;\nat line 1848: removeClassName: function(element, className) {\nat line 1849: if (!(element = $(element))) return;\nat line 1850: element.className = element.className.replace(\nat line 1852: return element;\nat line 1855: toggleClassName: function(element, className) {\nat line 1856: if (!(element = $(element))) return;\nat line 1857: return element[element.hasClassName(className) ?\nat line 1862: cleanWhitespace: function(element) {\nat line 1863: element = $(element);\nat line 1864: var node = element.firstChild;\nat line 1868: element.removeChild(node);\nat line 1871: return element;\nat line 1874: empty: function(element) {\nat line 1875: return $(element).innerHTML.blank();\nat line 1878: descendantOf: function(element, ancestor) {\nat line 1879: element = $(element), ancestor = $(ancestor);\nat line 1881: if (element.compareDocumentPosition)\nat line 1882: return (element.compareDocumentPosition(ancestor) & 8) === 8;\nat line 1885: return ancestor.contains(element) && ancestor !== element;\nat line 1887: while (element = element.parentNode)\nat line 1888: if (element == ancestor) return true;\nat line 1893: scrollTo: function(element) {\nat line 1894: element = $(element);\nat line 1895: var pos = element.cumulativeOffset();\nat line 1897: return element;\nat line 1900: getStyle: function(element, style) {\nat line 1901: element = $(element);\nat line 1903: var value = element.style[style];\nat line 1905: var css = document.defaultView.getComputedStyle(element, null);\nat line 1912: getOpacity: function(element) {\nat line 1913: return $(element).getStyle('opacity');\nat line 1916: setStyle: function(element, styles) {\nat line 1917: element = $(element);\nat line 1918: var elementStyle = element.style, match;\nat line 1920: element.style.cssText += ';' + styles;\nat line 1922: element.setOpacity(styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\nat line 1925: if (property == 'opacity') element.setOpacity(styles[property]);\nat line 1927: elementStyle[(property == 'float' || property == 'cssFloat') ?\nat line 1928: (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : 'styleFloat') :\nat line 1931: return element;\nat line 1934: setOpacity: function(element, value) {\nat line 1935: element = $(element);\nat line 1936: element.style.opacity = (value == 1 || value === '') ? '' :\nat line 1938: return element;\nat line 1941: getDimensions: function(element) {\nat line 1942: element = $(element);\nat line 1943: var display = element.getStyle('display');\nat line 1945: return {width: element.offsetWidth, height: element.offsetHeight};\nat line 1949: var els = element.style;\nat line 1956: var originalWidth = element.clientWidth;\nat line 1957: var originalHeight = element.clientHeight;\nat line 1964: makePositioned: function(element) {\nat line 1965: element = $(element);\nat line 1966: var pos = Element.getStyle(element, 'position');\nat line 1968: element._madePositioned = true;\nat line 1969: element.style.position = 'relative';\nat line 1973: element.style.top = 0;\nat line 1974: element.style.left = 0;\nat line 1977: return element;\nat line 1980: undoPositioned: function(element) {\nat line 1981: element = $(element);\nat line 1982: if (element._madePositioned) {\nat line 1983: element._madePositioned = undefined;\nat line 1984: element.style.position =\nat line 1985: element.style.top =\nat line 1986: element.style.left =\nat line 1987: element.style.bottom =\nat line 1988: element.style.right = '';\nat line 1990: return element;\nat line 1993: makeClipping: function(element) {\nat line 1994: element = $(element);\nat line 1995: if (element._overflow) return element;\nat line 1996: element._overflow = Element.getStyle(element, 'overflow') || 'auto';\nat line 1997: if (element._overflow !== 'hidden')\nat line 1998: element.style.overflow = 'hidden';\nat line 1999: return element;\nat line 2002: undoClipping: function(element) {\nat line 2003: element = $(element);\nat line 2004: if (!element._overflow) return element;\nat line 2005: element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;\nat line 2006: element._overflow = null;\nat line 2007: return element;\nat line 2010: cumulativeOffset: function(element) {\nat line 2013: valueT += element.offsetTop  || 0;\nat line 2014: valueL += element.offsetLeft || 0;\nat line 2015: element = element.offsetParent;\nat line 2016: } while (element);\nat line 2020: positionedOffset: function(element) {\nat line 2023: valueT += element.offsetTop  || 0;\nat line 2024: valueL += element.offsetLeft || 0;\nat line 2025: element = element.offsetParent;\nat line 2026: if (element) {\nat line 2027: if (element.tagName.toUpperCase() == 'BODY') break;\nat line 2028: var p = Element.getStyle(element, 'position');\nat line 2031: } while (element);\nat line 2035: absolutize: function(element) {\nat line 2036: element = $(element);\nat line 2037: if (element.getStyle('position') == 'absolute') return element;\nat line 2040: var offsets = element.positionedOffset();\nat line 2043: var width   = element.clientWidth;\nat line 2044: var height  = element.clientHeight;\nat line 2046: element._originalLeft   = left - parseFloat(element.style.left  || 0);\nat line 2047: element._originalTop    = top  - parseFloat(element.style.top || 0);\nat line 2048: element._originalWidth  = element.style.width;\nat line 2049: element._originalHeight = element.style.height;\nat line 2051: element.style.position = 'absolute';\nat line 2052: element.style.top    = top + 'px';\nat line 2053: element.style.left   = left + 'px';\nat line 2054: element.style.width  = width + 'px';\nat line 2055: element.style.height = height + 'px';\nat line 2056: return element;\nat line 2059: relativize: function(element) {\nat line 2060: element = $(element);\nat line 2061: if (element.getStyle('position') == 'relative') return element;\nat line 2064: element.style.position = 'relative';\nat line 2065: var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);\nat line 2066: var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);\nat line 2068: element.style.top    = top + 'px';\nat line 2069: element.style.left   = left + 'px';\nat line 2070: element.style.height = element._originalHeight;\nat line 2071: element.style.width  = element._originalWidth;\nat line 2072: return element;\nat line 2075: cumulativeScrollOffset: function(element) {\nat line 2078: valueT += element.scrollTop  || 0;\nat line 2079: valueL += element.scrollLeft || 0;\nat line 2080: element = element.parentNode;\nat line 2081: } while (element);\nat line 2085: getOffsetParent: function(element) {\nat line 2086: if (element.offsetParent) return $(element.offsetParent);\nat line 2087: if (element == document.body) return $(element);\nat line 2089: while ((element = element.parentNode) && element != document.body)\nat line 2090: if (Element.getStyle(element, 'position') != 'static')\nat line 2091: return $(element);\nat line 2099: var element = forElement;\nat line 2101: valueT += element.offsetTop  || 0;\nat line 2102: valueL += element.offsetLeft || 0;\nat line 2105: if (element.offsetParent == document.body &&\nat line 2106: Element.getStyle(element, 'position') == 'absolute') break;\nat line 2108: } while (element = element.offsetParent);\nat line 2110: element = forElement;\nat line 2112: if (!Prototype.Browser.Opera || (element.tagName && (element.tagName.toUpperCase() == 'BODY'))) {\nat line 2113: valueT -= element.scrollTop  || 0;\nat line 2114: valueL -= element.scrollLeft || 0;\nat line 2116: } while (element = element.parentNode);\nat line 2121: clonePosition: function(element, source) {\nat line 2136: element = $(element);\nat line 2141: if (Element.getStyle(element, 'position') == 'absolute') {\nat line 2142: parent = element.getOffsetParent();\nat line 2153: if (options.setLeft)   element.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';\nat line 2154: if (options.setTop)    element.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';\nat line 2155: if (options.setWidth)  element.style.width = source.offsetWidth + 'px';\nat line 2156: if (options.setHeight) element.style.height = source.offsetHeight + 'px';\nat line 2157: return element;\nat line 2180: function(proceed, element, style) {\nat line 2183: if (proceed(element, 'position') === 'static') return null;\nat line 2186: if (!Element.visible(element)) return null;\nat line 2190: var dim = parseInt(proceed(element, style), 10);\nat line 2192: if (dim !== element['offset' + style.capitalize()])\nat line 2205: var val = proceed(element, property);\nat line 2208: default: return proceed(element, style);\nat line 2214: function(proceed, element, attribute) {\nat line 2215: if (attribute === 'title') return element.title;\nat line 2216: return proceed(element, attribute);\nat line 2225: function(proceed, element) {\nat line 2226: element = $(element);\nat line 2228: try { element.offsetParent }\nat line 2230: var position = element.getStyle('position');\nat line 2231: if (position !== 'static') return proceed(element);\nat line 2232: element.setStyle({ position: 'relative' });\nat line 2233: var value = proceed(element);\nat line 2234: element.setStyle({ position: position });\nat line 2241: function(proceed, element) {\nat line 2242: element = $(element);\nat line 2243: try { element.offsetParent }\nat line 2245: var position = element.getStyle('position');\nat line 2246: if (position !== 'static') return proceed(element);\nat line 2249: var offsetParent = element.getOffsetParent();\nat line 2252: element.setStyle({ position: 'relative' });\nat line 2253: var value = proceed(element);\nat line 2254: element.setStyle({ position: position });\nat line 2261: function(proceed, element) {\nat line 2262: try { element.offsetParent }\nat line 2264: return proceed(element);\nat line 2268: Element.Methods.getStyle = function(element, style) {\nat line 2269: element = $(element);\nat line 2271: var value = element.style[style];\nat line 2272: if (!value && element.currentStyle) value = element.currentStyle[style];\nat line 2275: if (value = (element.getStyle('filter') || '').match(/alpha\\(opacity=(.*)\\)/))\nat line 2281: if ((style == 'width' || style == 'height') && (element.getStyle('display') != 'none'))\nat line 2282: return element['offset' + style.capitalize()] + 'px';\nat line 2288: Element.Methods.setOpacity = function(element, value) {\nat line 2292: element = $(element);\nat line 2293: var currentStyle = element.currentStyle;\nat line 2295: (!currentStyle && element.style.zoom == 'normal'))\nat line 2296: element.style.zoom = 1;\nat line 2298: var filter = element.getStyle('filter'), style = element.style;\nat line 2302: return element;\nat line 2306: return element;\nat line 2316: _getAttr: function(element, attribute) {\nat line 2317: return element.getAttribute(attribute, 2);\nat line 2319: _getAttrNode: function(element, attribute) {\nat line 2320: var node = element.getAttributeNode(attribute);\nat line 2323: _getEv: function(element, attribute) {\nat line 2324: attribute = element.getAttribute(attribute);\nat line 2327: _flag: function(element, attribute) {\nat line 2328: return $(element).hasAttribute(attribute) ? attribute : null;\nat line 2330: style: function(element) {\nat line 2331: return element.style.cssText.toLowerCase();\nat line 2333: title: function(element) {\nat line 2334: return element.title;\nat line 2346: checked: function(element, value) {\nat line 2347: element.checked = !!value;\nat line 2350: style: function(element, value) {\nat line 2351: element.style.cssText = value ? value : '';\nat line 2397: Element.Methods.setOpacity = function(element, value) {\nat line 2398: element = $(element);\nat line 2399: element.style.opacity = (value == 1) ? 0.999999 :\nat line 2401: return element;\nat line 2406: Element.Methods.setOpacity = function(element, value) {\nat line 2407: element = $(element);\nat line 2408: element.style.opacity = (value == 1 || value === '') ? '' :\nat line 2412: if(element.tagName.toUpperCase() == 'IMG' && element.width) {\nat line 2413: element.width++; element.width--;\nat line 2416: element.appendChild(n);\nat line 2417: element.removeChild(n);\nat line 2420: return element;\nat line 2426: Element.Methods.cumulativeOffset = function(element) {\nat line 2429: valueT += element.offsetTop  || 0;\nat line 2430: valueL += element.offsetLeft || 0;\nat line 2431: if (element.offsetParent == document.body)\nat line 2432: if (Element.getStyle(element, 'position') == 'absolute') break;\nat line 2434: element = element.offsetParent;\nat line 2435: } while (element);\nat line 2443: Element.Methods.update = function(element, content) {\nat line 2444: element = $(element);\nat line 2447: if (Object.isElement(content)) return element.update().insert(content);\nat line 2450: var tagName = element.tagName.toUpperCase();\nat line 2453: $A(element.childNodes).each(function(node) { element.removeChild(node) });\nat line 2455: .each(function(node) { element.appendChild(node) });\nat line 2457: else element.innerHTML = content.stripScripts();\nat line 2460: return element;\nat line 2465: Element.Methods.replace = function(element, content) {\nat line 2466: element = $(element);\nat line 2470: element.parentNode.replaceChild(content, element);\nat line 2471: return element;\nat line 2475: var parent = element.parentNode, tagName = parent.tagName.toUpperCase();\nat line 2478: var nextSibling = element.next();\nat line 2480: parent.removeChild(element);\nat line 2486: else element.outerHTML = content.stripScripts();\nat line 2489: return element;\nat line 2510: before: function(element, node) {\nat line 2511: element.parentNode.insertBefore(node, element);\nat line 2513: top: function(element, node) {\nat line 2514: element.insertBefore(node, element.firstChild);\nat line 2516: bottom: function(element, node) {\nat line 2517: element.appendChild(node);\nat line 2519: after: function(element, node) {\nat line 2520: element.parentNode.insertBefore(node, element.nextSibling);\nat line 2540: hasAttribute: function(element, attribute) {\nat line 2542: var node = $(element).getAttributeNode(attribute);\nat line 2564: var extend = Object.extend(function(element) {\nat line 2565: if (!element || element._extendedByPrototype ||\nat line 2566: element.nodeType != 1 || element == window) return element;\nat line 2569: tagName = element.tagName.toUpperCase(), property, value;\nat line 2576: if (Object.isFunction(value) && !(property in element))\nat line 2577: element[property] = value.methodize();\nat line 2580: element._extendedByPrototype = Prototype.emptyFunction;\nat line 2581: return element;\nat line 2597: Element.hasAttribute = function(element, attribute) {\nat line 2598: if (element.hasAttribute) return element.hasAttribute(attribute);\nat line 2599: return Element.Methods.Simulated.hasAttribute(element, attribute);\nat line 2855: match: function(element) {\nat line 2874: return this.findElements(document).include(element);\nat line 2883: if (!Selector.assertions[name](element, matches)) {\nat line 3044: tagName: function(element, matches) {\nat line 3045: return matches[1].toUpperCase() == element.tagName.toUpperCase();\nat line 3048: className: function(element, matches) {\nat line 3049: return Element.hasClassName(element, matches[1]);\nat line 3052: id: function(element, matches) {\nat line 3053: return element.id === matches[1];\nat line 3056: attrPresence: function(element, matches) {\nat line 3057: return Element.hasAttribute(element, matches[1]);\nat line 3060: attr: function(element, matches) {\nat line 3061: var nodeValue = Element.readAttribute(element, matches[1]);\nat line 3397: matchElements: function(elements, expression) {\nat line 3400: for (var i = 0, results = [], element; element = elements[i]; i++)\nat line 3401: if (element._countedByPrototype) results.push(element);\nat line 3406: findElement: function(elements, expression, index) {\nat line 3410: return Selector.matchElements(elements, expression || '*')[index || 0];\nat line 3413: findChildElements: function(element, expressions) {\nat line 3418: h.concat(results, selector.findElements(element));\nat line 3452: serializeElements: function(elements, options) {\nat line 3457: var data = elements.inject({ }, function(result, element) {\nat line 3458: if (!element.disabled && element.name) {\nat line 3459: key = element.name; value = $(element).getValue();\nat line 3460: if (value != null && element.type != 'file' && (element.type != 'submit' || (!submitted &&\nat line 3484: function(elements, child) {\nat line 3486: elements.push(Element.extend(child));\nat line 3487: return elements;\nat line 3521: var elements = $(form).getElements().findAll(function(element) {\nat line 3522: return 'hidden' != element.type && !element.disabled;\nat line 3524: var firstByIndex = elements.findAll(function(element) {\nat line 3525: return element.hasAttribute('tabIndex') && element.tabIndex >= 0;\nat line 3526: }).sortBy(function(element) { return element.tabIndex }).first();\nat line 3528: return firstByIndex ? firstByIndex : elements.find(function(element) {\nat line 3529: return ['input', 'select', 'textarea'].include(element.tagName.toLowerCase());\nat line 3561: focus: function(element) {\nat line 3562: $(element).focus();\nat line 3563: return element;\nat line 3566: select: function(element) {\nat line 3567: $(element).select();\nat line 3568: return element;\nat line 3573: serialize: function(element) {\nat line 3574: element = $(element);\nat line 3575: if (!element.disabled && element.name) {\nat line 3576: var value = element.getValue();\nat line 3579: pair[element.name] = value;\nat line 3586: getValue: function(element) {\nat line 3587: element = $(element);\nat line 3588: var method = element.tagName.toLowerCase();\nat line 3589: return Form.Element.Serializers[method](element);\nat line 3592: setValue: function(element, value) {\nat line 3593: element = $(element);\nat line 3594: var method = element.tagName.toLowerCase();\nat line 3595: Form.Element.Serializers[method](element, value);\nat line 3596: return element;\nat line 3599: clear: function(element) {\nat line 3600: $(element).value = '';\nat line 3601: return element;\nat line 3604: present: function(element) {\nat line 3605: return $(element).value != '';\nat line 3608: activate: function(element) {\nat line 3609: element = $(element);\nat line 3611: element.focus();\nat line 3612: if (element.select && (element.tagName.toLowerCase() != 'input' ||\nat line 3613: !['button', 'reset', 'submit'].include(element.type)))\nat line 3614: element.select();\nat line 3616: return element;\nat line 3619: disable: function(element) {\nat line 3620: element = $(element);\nat line 3621: element.disabled = true;\nat line 3622: return element;\nat line 3625: enable: function(element) {\nat line 3626: element = $(element);\nat line 3627: element.disabled = false;\nat line 3628: return element;\nat line 3640: input: function(element, value) {\nat line 3641: switch (element.type.toLowerCase()) {\nat line 3644: return Form.Element.Serializers.inputSelector(element, value);\nat line 3646: return Form.Element.Serializers.textarea(element, value);\nat line 3650: inputSelector: function(element, value) {\nat line 3651: if (Object.isUndefined(value)) return element.checked ? element.value : null;\nat line 3652: else element.checked = !!value;\nat line 3655: textarea: function(element, value) {\nat line 3656: if (Object.isUndefined(value)) return element.value;\nat line 3657: else element.value = value;\nat line 3660: select: function(element, value) {\nat line 3662: return this[element.type == 'select-one' ?\nat line 3663: 'selectOne' : 'selectMany'](element);\nat line 3666: for (var i = 0, length = element.length; i < length; i++) {\nat line 3667: opt = element.options[i];\nat line 3680: selectOne: function(element) {\nat line 3681: var index = element.selectedIndex;\nat line 3682: return index >= 0 ? this.optionValue(element.options[index]) : null;\nat line 3685: selectMany: function(element) {\nat line 3686: var values, length = element.length;\nat line 3690: var opt = element.options[i];\nat line 3705: initialize: function($super, element, frequency, callback) {\nat line 3707: this.element   = $(element);\nat line 3715: this.callback(this.element, value);\nat line 3723: return Form.Element.getValue(this.element);\nat line 3729: return Form.serialize(this.element);\nat line 3736: initialize: function(element, callback) {\nat line 3737: this.element  = $(element);\nat line 3741: if (this.element.tagName.toLowerCase() == 'form')\nat line 3744: this.registerCallback(this.element);\nat line 3750: this.callback(this.element, value);\nat line 3756: Form.getElements(this.element).each(this.registerCallback, this);\nat line 3759: registerCallback: function(element) {\nat line 3760: if (element.type) {\nat line 3761: switch (element.type.toLowerCase()) {\nat line 3764: Event.observe(element, 'click', this.onElementEvent.bind(this));\nat line 3767: Event.observe(element, 'change', this.onElementEvent.bind(this));\nat line 3776: return Form.Element.getValue(this.element);\nat line 3782: return Form.serialize(this.element);\nat line 3806: var element;\nat line 3808: case 'mouseover': element = event.fromElement; break;\nat line 3809: case 'mouseout':  element = event.toElement;   break;\nat line 3812: return Element.extend(element);\nat line 3845: element: function(event) {\nat line 3866: var element = Event.element(event);\nat line 3867: if (!expression) return element;\nat line 3868: var elements = [element].concat(element.ancestors());\nat line 3869: return Selector.findElement(elements, expression, 0);\nat line 3935: function getEventID(element) {\nat line 3936: if (element._prototypeEventID) return element._prototypeEventID[0];\nat line 3938: return element._prototypeEventID = [++arguments.callee.id];\nat line 3955: function createWrapper(element, eventName, handler) {\nat line 3956: var id = getEventID(element);\nat line 3966: handler.call(element, event);\nat line 4006: observe: function(element, eventName, handler) {\nat line 4007: element = $(element);\nat line 4010: var wrapper = createWrapper(element, eventName, handler);\nat line 4011: if (!wrapper) return element;\nat line 4013: if (element.addEventListener) {\nat line 4014: element.addEventListener(name, wrapper, false);\nat line 4016: element.attachEvent(\"on\" + name, wrapper);\nat line 4019: return element;\nat line 4022: stopObserving: function(element, eventName, handler) {\nat line 4023: element = $(element);\nat line 4024: var id = getEventID(element), name = getDOMEventName(eventName);\nat line 4028: element.stopObserving(eventName, wrapper.handler);\nat line 4030: return element;\nat line 4034: element.stopObserving(eventName);\nat line 4036: return element;\nat line 4040: if (!wrapper) return element;\nat line 4042: if (element.removeEventListener) {\nat line 4043: element.removeEventListener(name, wrapper, false);\nat line 4045: element.detachEvent(\"on\" + name, wrapper);\nat line 4050: return element;\nat line 4053: fire: function(element, eventName, memo) {\nat line 4054: element = $(element);\nat line 4055: if (element == document && document.createEvent && !element.dispatchEvent)\nat line 4056: element = document.documentElement;\nat line 4071: element.dispatchEvent(event);\nat line 4073: element.fireEvent(event.eventType, event);\nat line 4142: Before: function(element, content) {\nat line 4143: return Element.insert(element, {before:content});\nat line 4146: Top: function(element, content) {\nat line 4147: return Element.insert(element, {top:content});\nat line 4150: Bottom: function(element, content) {\nat line 4151: return Element.insert(element, {bottom:content});\nat line 4154: After: function(element, content) {\nat line 4155: return Element.insert(element, {after:content});\nat line 4183: within: function(element, x, y) {\nat line 4185: return this.withinIncludingScrolloffsets(element, x, y);\nat line 4188: this.offset = Element.cumulativeOffset(element);\nat line 4191: y <  this.offset[1] + element.offsetHeight &&\nat line 4193: x <  this.offset[0] + element.offsetWidth);\nat line 4196: withinIncludingScrolloffsets: function(element, x, y) {\nat line 4197: var offsetcache = Element.cumulativeScrollOffset(element);\nat line 4201: this.offset = Element.cumulativeOffset(element);\nat line 4204: this.ycomp <  this.offset[1] + element.offsetHeight &&\nat line 4206: this.xcomp <  this.offset[0] + element.offsetWidth);\nat line 4210: overlap: function(mode, element) {\nat line 4213: return ((this.offset[1] + element.offsetHeight) - this.ycomp) /\nat line 4214: element.offsetHeight;\nat line 4216: return ((this.offset[0] + element.offsetWidth) - this.xcomp) /\nat line 4217: element.offsetWidth;\nat line 4226: absolutize: function(element) {\nat line 4228: return Element.absolutize(element);\nat line 4231: relativize: function(element) {\nat line 4233: return Element.relativize(element);\nat line 4256: function(element, className) {\nat line 4260: } : function(element, className) {\nat line 4262: var elements = [], classNames = (/\\s/.test(className) ? $w(className) : null);\nat line 4263: if (!classNames && !className) return elements;\nat line 4265: var nodes = $(element).getElementsByTagName('*');\nat line 4273: elements.push(Element.extend(child));\nat line 4275: return elements;\nat line 4287: initialize: function(element) {\nat line 4288: this.element = $(element);\nat line 4292: this.element.className.split(/\\s+/).select(function(name) {\nat line 4298: this.element.className = className;\n-------------------------------\nvar element in RepeatingGameObject.js\n-----------------------------\nat line 44: Draws this element to the back buffer\n-------------------------------\nvar element in VisualGameObject.js\n-----------------------------\nat line 2: The base class for all elements that appear in the game.\nat line 15: Draws this element to the back buffer"},{"id":46, "x":2370,"y":100,"width":145, "height":40, "txt":" var result"},{"id":47, "x":2370,"y":250,"width":145, "height":136, "txt":"var result in prototype-1.6.0.3.js\n-----------------------------\nat line 137: var results = [];\nat line 141: results.push(property.toJSON() + ': ' + value);\nat line 144: return '{' + results.join(', ') + '}';\nat line 344: var result = '', source = this, match;\nat line 349: result += source.slice(0, match.index);\nat line 350: result += String.interpret(replacement(match));\nat line 353: result += source, source = '';\nat line 356: return result;\nat line 620: var result = true;\nat line 622: result = result && !!iterator.call(context, value, index);\nat line 623: if (!result) throw $break;\nat line 625: return result;\nat line 630: var result = false;\nat line 632: if (result = !!iterator.call(context, value, index))\nat line 635: return result;\nat line 640: var results = [];\nat line 642: results.push(iterator.call(context, value, index));\nat line 644: return results;\nat line 648: var result;\nat line 651: result = value;\nat line 655: return result;\nat line 659: var results = [];\nat line 662: results.push(value);\nat line 664: return results;\nat line 669: var results = [];\nat line 676: results.push(iterator.call(context, value, index));\nat line 678: return results;\nat line 719: var result;\nat line 722: if (result == null || value >= result)\nat line 723: result = value;\nat line 725: return result;\nat line 730: var result;\nat line 733: if (result == null || value < result)\nat line 734: result = value;\nat line 736: return result;\nat line 750: var results = [];\nat line 752: results.push(value[property]);\nat line 754: return results;\nat line 758: var results = [];\nat line 761: results.push(value);\nat line 763: return results;\nat line 815: var length = iterable.length || 0, results = new Array(length);\nat line 816: while (length--) results[length] = iterable[length];\nat line 817: return results;\nat line 829: var length = iterable.length || 0, results = new Array(length);\nat line 830: while (length--) results[length] = iterable[length];\nat line 831: return results;\nat line 915: var results = [];\nat line 918: if (!Object.isUndefined(value)) results.push(value);\nat line 920: return '[' + results.join(', ') + ']';\nat line 1058: return new Hash(object).inject(this, function(result, pair) {\nat line 1059: result.set(pair.key, pair.value);\nat line 1060: return result;\nat line 1065: return this.inject([], function(results, pair) {\nat line 1070: return results.concat(values.map(toQueryPair.curry(key)));\nat line 1071: } else results.push(toQueryPair(key, values));\nat line 1072: return results;\nat line 1526: var results = [];\nat line 1530: results.push(Element.extend(query.snapshotItem(i)));\nat line 1531: return results;\nat line 1680: var result = '<' + element.tagName.toLowerCase();\nat line 1684: if (value) result += ' ' + attribute + '=' + value.inspect(true);\nat line 1686: return result + '>';\nat line 2494: var result = [l, t];\nat line 2495: result.left = l;\nat line 2496: result.top = t;\nat line 2497: return result;\nat line 2832: var e = this.expression, results;\nat line 2844: results = $A(root.querySelectorAll(e)).map(Element.extend);\nat line 2847: return results;\nat line 3108: var results = [], n;\nat line 3112: results.push(Element.extend(n));\nat line 3114: return Selector.handlers.unmark(results);\nat line 3120: for (var i = 0, results = [], node; node = nodes[i]; i++)\nat line 3121: h.concat(results, node.getElementsByTagName('*'));\nat line 3122: return results;\nat line 3127: for (var i = 0, results = [], node; node = nodes[i]; i++) {\nat line 3129: if (child.nodeType == 1 && child.tagName != '!') results.push(child);\nat line 3131: return results;\nat line 3135: for (var i = 0, results = [], node; node = nodes[i]; i++) {\nat line 3137: if (next) results.push(next);\nat line 3139: return results;\nat line 3144: for (var i = 0, results = [], node; node = nodes[i]; i++)\nat line 3145: h.concat(results, Element.nextSiblings(node));\nat line 3146: return results;\nat line 3164: var results = [], h = Selector.handlers;\nat line 3170: h.concat(results, node.getElementsByTagName(tagName));\nat line 3171: return results;\nat line 3176: if (node.tagName.toUpperCase() === uTagName) results.push(node);\nat line 3177: return results;\nat line 3214: for (var i = 0, results = [], node, nodeClassName; node = nodes[i]; i++) {\nat line 3218: results.push(node);\nat line 3220: return results;\nat line 3226: var results = [];\nat line 3228: if (Element.hasAttribute(node, attr)) results.push(node);\nat line 3229: return results;\nat line 3235: var handler = Selector.operators[operator], results = [];\nat line 3239: if (handler(nodeValue, value)) results.push(node);\nat line 3241: return results;\nat line 3253: for (var i = 0, results = [], node; node = nodes[i]; i++) {\nat line 3255: results.push(node);\nat line 3257: return results;\nat line 3260: for (var i = 0, results = [], node; node = nodes[i]; i++) {\nat line 3262: results.push(node);\nat line 3264: return results;\nat line 3268: for (var i = 0, results = [], node; node = nodes[i]; i++)\nat line 3270: results.push(node);\nat line 3271: return results;\nat line 3310: var h = Selector.handlers, results = [], indexed = [], m;\nat line 3321: if (node.nodeIndex == formula) results.push(node);\nat line 3329: if (node.nodeIndex == indices[j]) results.push(node);\nat line 3334: return results;\nat line 3338: for (var i = 0, results = [], node; node = nodes[i]; i++) {\nat line 3341: results.push(node);\nat line 3343: return results;\nat line 3350: for (var i = 0, results = [], node; node = nodes[i]; i++)\nat line 3351: if (!node._countedByPrototype) results.push(node);\nat line 3353: return results;\nat line 3357: for (var i = 0, results = [], node; node = nodes[i]; i++)\nat line 3359: results.push(node);\nat line 3360: return results;\nat line 3364: for (var i = 0, results = [], node; node = nodes[i]; i++)\nat line 3365: if (node.disabled) results.push(node);\nat line 3366: return results;\nat line 3370: for (var i = 0, results = [], node; node = nodes[i]; i++)\nat line 3371: if (node.checked) results.push(node);\nat line 3372: return results;\nat line 3400: for (var i = 0, results = [], element; element = elements[i]; i++)\nat line 3401: if (element._countedByPrototype) results.push(element);\nat line 3403: return results;\nat line 3415: var results = [], h = Selector.handlers;\nat line 3418: h.concat(results, selector.findElements(element));\nat line 3420: return (l > 1) ? h.unique(results) : results;\nat line 3457: var data = elements.inject({ }, function(result, element) {\nat line 3462: if (key in result) {\nat line 3464: if (!Object.isArray(result[key])) result[key] = [result[key]];\nat line 3465: result[key].push(value);\nat line 3467: else result[key] = value;\nat line 3470: return result;"},{"id":48, "x":2570,"y":100,"width":145, "height":40, "txt":" var div = new Element('div'), t"},{"id":49, "x":2770,"y":100,"width":145, "height":40, "txt":" var Methods = { }, ByTag"},{"id":50, "x":2770,"y":250,"width":145, "height":136, "txt":"var Methods = { }, ByTag in prototype-1.6.0.3.js\n-----------------------------\nat line 2562: var Methods = { }, ByTag = Element.Methods.ByTag;"},{"id":51, "x":2970,"y":100,"width":145, "height":40, "txt":" var F = Prototype.BrowserFeatures, T"},{"id":52, "x":2970,"y":250,"width":145, "height":136, "txt":"var F = Prototype.BrowserFeatures, T in prototype-1.6.0.3.js\n-----------------------------\nat line 2603: var F = Prototype.BrowserFeatures, T = Element.Methods.ByTag;"},{"id":53, "x":3170,"y":100,"width":145, "height":40, "txt":" var var isButton"},{"id":54, "x":3170,"y":250,"width":145, "height":136, "txt":"var var isButton in prototype-1.6.0.3.js\n-----------------------------\nat line 3817: var isButton;"},{"id":55, "x":3370,"y":100,"width":145, "height":40, "txt":" var cache"},{"id":56, "x":3370,"y":250,"width":145, "height":136, "txt":"var cache in prototype-1.6.0.3.js\n-----------------------------\nat line 1562: var cache = Element.cache;\nat line 1568: if (!cache[tagName]) cache[tagName] = Element.extend(document.createElement(tagName));\nat line 1569: return Element.writeAttribute(cache[tagName].cloneNode(false), attributes);\nat line 1575: Element.cache = { };\nat line 2686: Element.cache = { };\nat line 2779: if (Selector._cache[e]) {\nat line 2780: this.matcher = Selector._cache[e];\nat line 2802: Selector._cache[this.expression] = this.matcher;\nat line 2809: if (Selector._cache[e]) {\nat line 2810: this.xpath = Selector._cache[e]; return;\nat line 2827: Selector._cache[this.expression] = this.xpath;\nat line 2901: _cache: { },\nat line 3803: cache: { },\nat line 3933: var cache = Event.cache;\nat line 3947: return cache[id] = cache[id] || { };\nat line 3986: for (var id in cache)\nat line 3987: for (var eventName in cache[id])\nat line 3988: cache[id][eventName] = null;\nat line 4197: var offsetcache = Element.cumulativeScrollOffset(element);\nat line 4199: this.xcomp = x + offsetcache[0] - this.deltaX;\nat line 4200: this.ycomp = y + offsetcache[1] - this.deltaY;"},{"id":57, "x":3570,"y":100,"width":145, "height":40, "txt":" var var timer"},{"id":58, "x":3570,"y":250,"width":145, "height":136, "txt":"var var timer in prototype-1.6.0.3.js\n-----------------------------\nat line 4100: var timer;"}],"connections" : [{"nodeA":27, "nodeB":28,"conA":"bottom","conB":"top"},{"nodeA":29, "nodeB":30,"conA":"bottom","conB":"top"},{"nodeA":31, "nodeB":32,"conA":"bottom","conB":"top"},{"nodeA":33, "nodeB":34,"conA":"bottom","conB":"top"},{"nodeA":35, "nodeB":36,"conA":"bottom","conB":"top"},{"nodeA":37, "nodeB":38,"conA":"bottom","conB":"top"},{"nodeA":39, "nodeB":40,"conA":"bottom","conB":"top"},{"nodeA":41, "nodeB":42,"conA":"bottom","conB":"top"},{"nodeA":44, "nodeB":45,"conA":"bottom","conB":"top"},{"nodeA":46, "nodeB":47,"conA":"bottom","conB":"top"},{"nodeA":49, "nodeB":50,"conA":"bottom","conB":"top"},{"nodeA":51, "nodeB":52,"conA":"bottom","conB":"top"},{"nodeA":53, "nodeB":54,"conA":"bottom","conB":"top"},{"nodeA":55, "nodeB":56,"conA":"bottom","conB":"top"},{"nodeA":57, "nodeB":58,"conA":"bottom","conB":"top"}]},"globalFunctionView":{"nodes" : [{"id":59, "x":20,"y":80,"width":260, "height":200, "txt":"Global Function List:\n--------------------------------------------------------------\ninit()\n\nklass()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$A(iterable)\n\n\n\n\n$w(string)\n\n\n\n$H(object)\ntoQueryPair(key, value)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$(element)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstripAlpha(filter)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nextend(tagName)\ncopy(methods, destination, onlyIfAbsent)\nfindDOMClass(tagName)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$$()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngetEventID(element)\ngetDOMEventName(eventName)\ngetCacheForID(id)\ngetWrappersForEventName(id, eventName)\ncreateWrapper(element, eventName, handler)\nfindWrapper(id, eventName, handler)\ndestroyWrapper(id, eventName, handler)\ndestroyCache()\n\n\n\nfireContentLoadedEvent()\n\n\n\n\n\n\n\n\n\n\n\n\niter(name)\n\n\n\n\n\n\n\n\n\n\n"}],"connections" : []},"inheritance":{"nodes" : [{"id":60, "x":250,"y":150,"width":145, "height":40, "txt":" Class: VisualGameObject"},{"id":61, "x":250,"y":250,"width":145, "height":40, "txt":"Class: AnimatedGameObject"},{"id":62, "x":500,"y":350,"width":145, "height":40, "txt":"Class: LevelEndPost"},{"id":63, "x":750,"y":250,"width":145, "height":40, "txt":"Class: MainMenu"},{"id":64, "x":750,"y":350,"width":145, "height":40, "txt":"Class: Player"},{"id":65, "x":1000,"y":350,"width":145, "height":40, "txt":"Class: Powerup"},{"id":66, "x":500,"y":150,"width":145, "height":40, "txt":" Class: subclass"},{"id":67, "x":500,"y":250,"width":145, "height":40, "txt":"Class: klass"},{"id":68, "x":1000,"y":250,"width":145, "height":40, "txt":"Class: RepeatingGameObject"},{"id":69, "x":750,"y":150,"width":145, "height":40, "txt":" Class: GameObject"}],"connections" : [{"nodeA":60, "nodeB":61,"conA":"bottom","conB":"top"},{"nodeA":61, "nodeB":62,"conA":"bottom","conB":"top"},{"nodeA":60, "nodeB":63,"conA":"bottom","conB":"top"},{"nodeA":61, "nodeB":64,"conA":"bottom","conB":"top"},{"nodeA":61, "nodeB":65,"conA":"bottom","conB":"top"},{"nodeA":66, "nodeB":67,"conA":"bottom","conB":"top"},{"nodeA":60, "nodeB":68,"conA":"bottom","conB":"top"},{"nodeA":69, "nodeB":60,"conA":"bottom","conB":"top"}]},"files":[{"name":"AnimatedGameObject.js", "path":"../uploaded-files/AnimatedGameObject_T12-12-2011_21-57-57.txt"},{"name":"ApplicationManager.js", "path":"../uploaded-files/ApplicationManager_T12-12-2011_21-57-57.txt"},{"name":"GameObject.js", "path":"../uploaded-files/GameObject_T12-12-2011_21-57-57.txt"},{"name":"GameObjectManager.js", "path":"../uploaded-files/GameObjectManager_T12-12-2011_21-57-57.txt"},{"name":"Level.js", "path":"../uploaded-files/Level_T12-12-2011_21-57-57.txt"},{"name":"LevelEndPost.js", "path":"../uploaded-files/LevelEndPost_T12-12-2011_21-57-57.txt"},{"name":"Main.js", "path":"../uploaded-files/Main_T12-12-2011_21-57-57.txt"},{"name":"MainMenu.js", "path":"../uploaded-files/MainMenu_T12-12-2011_21-57-57.txt"},{"name":"Player.js", "path":"../uploaded-files/Player_T12-12-2011_21-57-57.txt"},{"name":"Powerup.js", "path":"../uploaded-files/Powerup_T12-12-2011_21-57-57.txt"},{"name":"prototype-1.6.0.3.js", "path":"../uploaded-files/prototype-1.6.0.3_T12-12-2011_21-57-57.txt"},{"name":"Rectangle.js", "path":"../uploaded-files/Rectangle_T12-12-2011_21-57-57.txt"},{"name":"RepeatingGameObject.js", "path":"../uploaded-files/RepeatingGameObject_T12-12-2011_21-57-57.txt"},{"name":"ResourceManager.js", "path":"../uploaded-files/ResourceManager_T12-12-2011_21-57-57.txt"},{"name":"Utils.js", "path":"../uploaded-files/Utils_T12-12-2011_21-57-57.txt"},{"name":"VisualGameObject.js", "path":"../uploaded-files/VisualGameObject_T12-12-2011_21-57-57.txt"}]}